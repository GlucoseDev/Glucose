--- a/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/net/minecraft/server/dedicated/DedicatedServer.java
@@ -22,6 +22,8 @@
 import java.util.function.BooleanSupplier;
 import java.util.regex.Pattern;
 import javax.annotation.Nullable;
+
+import ml.glucosedev.glucose.GlucoseEventHandler;
 import net.minecraft.DefaultUncaughtExceptionHandler;
 import net.minecraft.DefaultUncaughtExceptionHandlerWithName;
 import net.minecraft.SharedConstants;
@@ -146,9 +148,9 @@
       try {
          this.getConnection().startTcpServerListener(var3, this.getPort());
       } catch (IOException var10) {
-         LOGGER.warn("**** FAILED TO BIND TO PORT!");
-         LOGGER.warn("The exception was: {}", var10.toString());
-         LOGGER.warn("Perhaps a server is already running on that port?");
+         LOGGER.error("**** FAILED TO BIND TO PORT!"); // Glucose :: warn --> error
+         LOGGER.error("The exception was: {}", var10.toString()); // Glucose :: warn --> error
+         LOGGER.error("Perhaps a server is already running on that port?"); // Glucose :: warn --> error
          return false;
       }
 
@@ -172,11 +174,14 @@
          SkullBlockEntity.setSessionService(this.getSessionService());
          SkullBlockEntity.setMainThreadExecutor(this);
          GameProfileCache.setUsesAuthentication(this.usesAuthentication());
+         // Glucose start
+         new GlucoseEventHandler().serverStartEvent();
+         // Glucose end
          LOGGER.info("Preparing level \"{}\"", this.getLevelIdName());
          this.loadLevel();
          long var6 = Util.getNanos() - var4;
          String var8 = String.format(Locale.ROOT, "%.3fs", (double)var6 / 1.0E9D);
-         LOGGER.info("Done ({})! For help, type \"help\"", var8);
+         LOGGER.info("Server started in {}! For help, type \"help\"", var8);
          if (var2.announcePlayerAchievements != null) {
             ((GameRules.BooleanValue)this.getGameRules().getRule(GameRules.RULE_ANNOUNCE_ADVANCEMENTS)).set(var2.announcePlayerAchievements, this);
          }
@@ -605,7 +610,9 @@
    }
 
    // $FF: synthetic method
+   /* // Glucose start
    public PlayerList getPlayerList() {
       return this.getPlayerList();
    }
+    */ // Glucose end
 }
