--- a/net/minecraft/server/Main.java
+++ b/net/minecraft/server/Main.java
@@ -14,12 +14,9 @@
 import java.util.Optional;
 import java.util.concurrent.CompletableFuture;
 import java.util.function.BooleanSupplier;
-import joptsimple.AbstractOptionSpec;
-import joptsimple.ArgumentAcceptingOptionSpec;
-import joptsimple.NonOptionArgumentSpec;
-import joptsimple.OptionParser;
-import joptsimple.OptionSet;
-import joptsimple.OptionSpecBuilder;
+
+//import jdk.internal.joptsimple.*;
+import joptsimple.*;
 import net.minecraft.CrashReport;
 import net.minecraft.DefaultUncaughtExceptionHandler;
 import net.minecraft.SharedConstants;
@@ -58,6 +55,7 @@
 import net.minecraft.world.level.storage.WorldData;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.jetbrains.annotations.NotNull;
 
 public class Main {
    private static final Logger LOGGER = LogManager.getLogger();
@@ -85,7 +83,7 @@
       NonOptionArgumentSpec var15 = var1.nonOptions();
 
       try {
-         OptionSet var16 = var1.parse(var0);
+         OptionSet var16 = var1.parse(String.valueOf(var0)); // Glucose :: Wrapped
          if (var16.has(var9)) {
             var1.printHelpOn(System.err);
             return;
@@ -107,7 +105,7 @@
          }
 
          if (!var21.hasAgreedToEULA()) {
-            LOGGER.info("You need to agree to the EULA in order to run the server. Go to eula.txt for more info.");
+            LOGGER.error("You need to agree to the EULA in order to run the server. Go to eula.txt for more info."); // Glucose :: info --> error
             return;
          }
 
@@ -171,14 +169,15 @@
          }
 
          var29.saveDataTag(var17, (WorldData)var38);
+         Object finalVar3 = var38; // Glucose
          final DedicatedServer var44 = (DedicatedServer)MinecraftServer.spin((var16x) -> {
-            DedicatedServer var17x = new DedicatedServer(var16x, var17, var29, var33, var36, var38, var19, DataFixers.getDataFixer(), var24, var25, var26, LoggerChunkProgressListener::new);
+            DedicatedServer var17x = new DedicatedServer(var16x, var17, var29, var33, var36, (WorldData) finalVar3, var19, DataFixers.getDataFixer(), var24, var25, var26, LoggerChunkProgressListener::new); // Glucose :: cast, made final
             var17x.setSingleplayerName((String)var16.valueOf(var10));
             var17x.setPort((Integer)var16.valueOf(var13));
             var17x.setDemo(var16.has(var4));
             var17x.setId((String)var16.valueOf(var14));
-            boolean var18 = !var16.has(var2) && !var16.valuesOf(var15).contains("nogui");
-            if (var18 && !GraphicsEnvironment.isHeadless()) {
+            boolean var181 = !var16.has(var2) && !var16.valuesOf(var15).contains("nogui");
+            if (var181 && !GraphicsEnvironment.isHeadless()) {
                var17x.showGui();
             }
 
